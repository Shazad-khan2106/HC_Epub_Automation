name: Run Tests and Publish HTML Report

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: '30 8 * * 1-5'   # 2:00 PM IST, Monday‚ÄìFriday
    - cron: '30 16 * * 1-5'  # 10:00 PM IST, Monday‚ÄìFriday

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-22.04
    outputs:
      test_status: ${{ steps.set_status.outputs.status }}
      passed_count: ${{ steps.set_summary.outputs.passed_count }}
      failed_count: ${{ steps.set_summary.outputs.failed_count }}
      skipped_count: ${{ steps.set_summary.outputs.skipped_count }}
      duration: ${{ steps.set_summary.outputs.duration }}
      features_tested: ${{ steps.set_summary.outputs.features_tested }}
      scenarios_passed: ${{ steps.set_summary.outputs.scenarios_passed }}
      scenarios_failed: ${{ steps.set_summary.outputs.scenarios_failed }}
      total_scenarios: ${{ steps.set_summary.outputs.total_scenarios }}
      success_rate: ${{ steps.set_summary.outputs.success_rate }}
      feature_details: ${{ steps.set_summary.outputs.feature_details }}
      overall_status: ${{ steps.set_summary.outputs.overall_status }}
      pass_percentage: ${{ steps.set_summary.outputs.pass_percentage }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install

      - name: Run Cucumber Tests
        id: run_tests
        run: |
          npm run test || echo "TEST_FAILED=true" >> $GITHUB_ENV

      - name: Generate Custom HTML Report
        if: always()
        run: node generate-report.js || echo "REPORT_FAILED=true" >> $GITHUB_ENV

      - name: Inject Timeline Chart
        if: always()
        run: npm run inject-timeline

      - name: Take Screenshot of Report
        if: always()
        run: |
          npm install puppeteer
          node capture-screenshot.js || echo "SCREENSHOT_FAILED=true" >> $GITHUB_ENV

      - name: Upload Report and Screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-report-assets
          path: |
            ./html-report
            ./report-screenshot.png

      - name: Parse Feature & Step Summary from Cucumber Report
        if: always()
        run: |
          node parse-summary.js

      - name: Set Summary Outputs
        id: set_summary
        if: always()
        run: |
          summary=$(cat test-summary.json)
          
          echo "passed_count=$(echo $summary | jq '.totalPassed')" >> $GITHUB_OUTPUT
          echo "failed_count=$(echo $summary | jq '.totalFailed')" >> $GITHUB_OUTPUT
          echo "skipped_count=$(echo $summary | jq '.totalSkipped')" >> $GITHUB_OUTPUT
          echo "scenarios_passed=$(echo $summary | jq '.scenariosPassed')" >> $GITHUB_OUTPUT
          echo "scenarios_failed=$(echo $summary | jq '.scenariosFailed')" >> $GITHUB_OUTPUT
          echo "total_scenarios=$(echo $summary | jq '.totalScenarios')" >> $GITHUB_OUTPUT
          echo "overall_status=$(echo $summary | jq -r '.overallStatus')" >> $GITHUB_OUTPUT
          echo "pass_percentage=$(echo $summary | jq '.passPercentage')" >> $GITHUB_OUTPUT
          
          # Pass duration as JSON string
          echo 'duration<<EOF' >> $GITHUB_OUTPUT
          echo '{"totalDuration": "'$(echo $summary | jq -r '.totalDuration')'", "executionTime": "'$(echo $summary | jq -r '.executionTime')'"}' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          # Pass features as simple list
          echo 'features_tested<<EOF' >> $GITHUB_OUTPUT
          echo $summary | jq -r '.features[] | .name' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          # Pass feature details as formatted HTML
          echo 'feature_details<<EOF' >> $GITHUB_OUTPUT
          echo $summary | jq -r '.features[] | "<div class=\"feature-card\"><h4>" + .name + "</h4><div class=\"feature-stats-grid\"><div class=\"stat-item\"><strong>Scenarios:</strong> " + (.scenariosPassed|tostring) + " passed, " + (.scenariosFailed|tostring) + " failed</div><div class=\"stat-item\"><strong>Steps:</strong> " + (.passed|tostring) + " passed, " + (.failed|tostring) + " failed, " + (.skipped|tostring) + " skipped</div><div class=\"stat-item\"><strong>Duration:</strong> " + .featureDuration + "</div></div></div>"' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Set Job Status
        id: set_status
        if: always()
        run: echo "status=${{ job.status }}" >> $GITHUB_OUTPUT

  deploy:
    needs: test
    if: ${{ needs.test.outputs.test_status == 'success' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Report Artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-report-assets
          path: site

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/html-report

  notify:
    needs: [test, deploy]
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: Download Report Artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-report-assets
          path: html-report

      - name: Send Result Email
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: |
            üìä HC_EPUB Automation Test Report - ${{ github.repository }} - ${{ needs.test.outputs.overall_status }}
          to: ${{ secrets.EMAIL_TO }}
          from: GitHub CI <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <!DOCTYPE html>
            <html>
            <head>
              <meta charset="utf-8">
              <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 800px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #667eea87 0%, #764ba266 100%); color: #333; padding: 20px; border-radius: 10px; margin-bottom: 20px; }
                .summary-card { background: #f8f9fa; border-left: 4px solid #28a745; padding: 15px; margin: 15px 0; border-radius: 5px; }
                .summary-card.failed { border-left-color: #dc3545; }
                .feature-card { background: white; border: 1px solid #e0e0e0; border-radius: 8px; padding: 15px; margin: 10px 0; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                .commit-info { background: #f1f3f4; padding: 20px; border-radius: 8px; height: 100%; box-sizing: border-box; }
                .scenario-summary { background: #e8f4fd; padding: 20px 20px 40px 20px; border-radius: 8px;height: 120%; box-sizing: border-box; }
                .footer { margin-top: 30px; padding-top: 20px; border-top: 1px solid #e0e0e0; color: #666; }
                .stat-box { text-align: center; padding: 20px 10px; border-radius: 8px; color: white; }
                .stat-passed { background: #0db3338f; color: #333; }
                .stat-failed { background: #e0969d; color: #333; }
                .stat-skipped { background: #f1c74770; color: #333; }
                .stat-duration { background: #17a2b87a; color: #333; }
                .stat-percentage { background: #6f42c17a; color: #333; }
                .stat-number { font-size: 28px; font-weight: bold; margin-bottom: 5px; line-height: 1; }
                .stat-label { font-size: 14px; line-height: 1.2; }
              </style>
            </head>
            <body>
              <div class="header">
                <h1>üìä HC_EPUB Automation Test Report</h1>
                <h2>HC_EPUB</h2>
              </div>

              <!-- Execution Summary Table -->
              <table width="100%" cellpadding="0" cellspacing="15" border="0" style="margin: 20px 0;">
                <tr>
                  <td width="50%" valign="top">
                    <div class="commit-info">
                      <h3>üìù Execution Details</h3>
                      <strong>Repository:</strong> ${{ github.repository }}<br>
                      <strong>Triggered By:</strong> ${{ github.actor }}<br>
                      <strong>Commit SHA:</strong> <code>${{ github.sha }}</code><br>
                      <strong>Branch:</strong> ${{ github.ref_name }}<br>
                      <strong>Execution Time:</strong> ${{ fromJSON(needs.test.outputs.duration).executionTime }}
                    </div>
                  </td>
                  <td width="50%" valign="top">
                    <div class="scenario-summary">
                      <h3>üìà Scenario Summary</h3>
                      <strong>Total Scenarios:</strong> ${{ needs.test.outputs.total_scenarios }}<br>
                      <strong>Passed:</strong> ${{ needs.test.outputs.scenarios_passed }}<br>
                      <strong>Failed:</strong> ${{ needs.test.outputs.scenarios_failed }}<br>
                      <strong>Success Rate:</strong> ${{ needs.test.outputs.pass_percentage }}%
                    </div>
                  </td>
                </tr>
              </table>

              <!-- Stats Grid Table - FIXED: Side by side using table -->
              <table width="100%" cellpadding="0" cellspacing="15" border="0" style="margin: 20px 0;">
                <tr>
                  <td width="20%" valign="top">
                    <div class="stat-box stat-passed">
                      <div class="stat-number">${{ needs.test.outputs.passed_count }}</div>
                      <div class="stat-label">Steps Passed</div>
                    </div>
                  </td>
                  <td width="20%" valign="top">
                    <div class="stat-box stat-failed">
                      <div class="stat-number">${{ needs.test.outputs.failed_count }}</div>
                      <div class="stat-label">Steps Failed</div>
                    </div>
                  </td>
                  <td width="20%" valign="top">
                    <div class="stat-box stat-skipped">
                      <div class="stat-number">${{ needs.test.outputs.skipped_count }}</div>
                      <div class="stat-label">Steps Skipped</div>
                    </div>
                  </td>
                  <td width="20%" valign="top">
                    <div class="stat-box stat-duration">
                      <div class="stat-number">${{ fromJSON(needs.test.outputs.duration).totalDuration }}</div>
                      <div class="stat-label">Total Duration</div>
                    </div>
                  </td>
                  <td width="20%" valign="top">
                    <div class="stat-box stat-percentage">
                      <div class="stat-number">${{ needs.test.outputs.pass_percentage }}%</div>
                      <div class="stat-label">Pass Percentage</div>
                    </div>
                  </td>
                </tr>
              </table>

              <div class="summary-card ${{ needs.test.outputs.overall_status == 'Success' || 'failed' }}">
                <h3>Overall Status: 
                  ${{ needs.test.outputs.overall_status == 'Failed' && '<span style="color: #dc3545; font-weight: bold;">‚ùå FAILED</span>' || '<span style="color: #28a745; font-weight: bold;">‚úÖ SUCCESS</span>' }}
                </h3>
                <p><strong>Scenarios:</strong> ${{ needs.test.outputs.scenarios_passed }} passed, ${{ needs.test.outputs.scenarios_failed }} failed</p>
                <p><strong>Steps:</strong> ${{ needs.test.outputs.passed_count }} passed, ${{ needs.test.outputs.failed_count }} failed, ${{ needs.test.outputs.skipped_count }} skipped</p>
              </div>

              <h3>üìã Features Tested</h3>
              
              ${{ needs.test.outputs.feature_details }}

              <div style="text-align: center; margin: 30px 0;">
                <a href="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" 
                   style="background: #007bff9c; color: #333; padding: 12px 24px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">
                  üìä View Detailed HTML Report
                </a>
              </div>

              <div class="footer">
                <p><strong>üìé Attachments:</strong> HTML Report Screenshot</p>
                <p><strong>üëÄ Next Steps:</strong> Please review the detailed report for failed scenarios and check logs for any issues.</p>
                <p><strong>üîÑ Rerun:</strong> If needed, rerun the workflow after applying fixes.</p>
                <hr>
                <p><em>Best regards,<br>
                <strong>GitHub CI Bot</strong><br>
                Techolution QA Automation</em></p>
              </div>
            </body>
            </html>
          attachments: ./html-report/report-screenshot.png