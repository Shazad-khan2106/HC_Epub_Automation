name: Run Tests and Publish HTML Report

on:
  push:
    branches: [main]
  pull_request:
  schedule:
  - cron: '30 8 * * *'   # 2:00 PM IST = 08:30 UTC
  - cron: '30 16 * * *'  # 10:00 PM IST = 16:30 UTC

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-22.04
    outputs:
      test_status: ${{ steps.set_status.outputs.status }}
      passed_count: ${{ steps.set_summary.outputs.passed_count }}
      failed_count: ${{ steps.set_summary.outputs.failed_count }}
      skipped_count: ${{ steps.set_summary.outputs.skipped_count }}
      duration: ${{ steps.set_summary.outputs.duration }}
      features_tested: ${{ steps.set_summary.outputs.features_tested }}
      steps_summary: ${{ steps.set_summary.outputs.steps_summary }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install

      - name: Run Cucumber Tests
        id: run_tests
        run: |
          npm run test || echo "TEST_FAILED=true" >> $GITHUB_ENV

      - name: Generate Custom HTML Report
        if: always()
        run: node generate-report.js || echo "REPORT_FAILED=true" >> $GITHUB_ENV

      - name: Inject Timeline Chart
        if: always()
        run: npm run inject-timeline

      - name: Take Screenshot of Report
        if: always()
        run: |
          npm install puppeteer
          node capture-screenshot.js || echo "SCREENSHOT_FAILED=true" >> $GITHUB_ENV

      - name: Upload Report and Screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-report-assets
          path: |
            ./html-report
            ./report-screenshot.png

      - name: Parse Feature & Step Summary from Cucumber Report
        if: always()
        run: |
          node parse-summary.js

      - name: Set Summary Outputs
        id: set_summary
        if: always()
        run: |
          summary=$(cat test-summary.json)

          echo "passed_count=$(echo $summary | jq '.totalPassed')" >> $GITHUB_OUTPUT
          echo "failed_count=$(echo $summary | jq '.totalFailed')" >> $GITHUB_OUTPUT
          echo "skipped_count=$(echo $summary | jq '.totalSkipped')" >> $GITHUB_OUTPUT
          echo "duration=Auto Extracted" >> $GITHUB_OUTPUT

          echo 'features_tested<<EOF' >> $GITHUB_OUTPUT
          echo $summary | jq -r '.features[] | "<li>" + .name + "</li>"' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          echo 'steps_summary<<EOF' >> $GITHUB_OUTPUT
          echo $summary | jq -r '.features[].steps[] | select(.stepName != null) | "- " + .stepName + " (" + .status + ")"' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Set Job Status
        id: set_status
        if: always()
        run: echo "status=${{ job.status }}" >> $GITHUB_OUTPUT

  deploy:
    needs: test
    if: ${{ needs.test.outputs.test_status == 'success' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Report Artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-report-assets
          path: site

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/html-report

  notify:
    needs: [test, deploy]
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: Download Report Artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-report-assets
          path: html-report

      - name: Send Result Email
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: |
            🧪 Test Report - ${{ github.repository }} - Status: ${{ needs.test.outputs.test_status }}
          to: ${{ secrets.EMAIL_TO }}
          from: GitHub CI <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <p>Hello Team,</p>

            <p>A new test run has been completed for <code>${{ github.repository }}</code>.</p>

            <ul>
              <li><strong>Status:</strong> <span style="color:green;"><strong>${{ needs.test.outputs.test_status }}</strong></span></li>
              <li><strong>Triggered By:</strong> <code>${{ github.actor }}</code></li>
              <li><strong>Commit Message:</strong> <code>${{ github.event.head_commit.message }}</code></li>
              <li><strong>Commit SHA:</strong> <code>${{ github.sha }}</code></li>
            </ul>

            <h3>📂 Features Covered:</h3>
            <ul>
            ${{ needs.test.outputs.features_tested }}
            </ul>

            <h3>📋 Step Summary:</h3>
            <pre>${{ needs.test.outputs.steps_summary }}</pre>

            <h3>📊 Test Summary:</h3>
            <ul>
              <li>✅ Passed: <strong>${{ needs.test.outputs.passed_count }}</strong></li>
              <li>❌ Failed: <strong>${{ needs.test.outputs.failed_count }}</strong></li>
              <li>⏸ Skipped: <strong>${{ needs.test.outputs.skipped_count }}</strong></li>
              <li>⏱ Duration: <strong>${{ needs.test.outputs.duration }}</strong></li>
            </ul>

            <p><strong>📎 Test Report:</strong><br>
            <a href="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/">Click to view HTML report</a>
            </p>

            <p><strong>🖼 Screenshot Attached</strong> (if generated successfully).</p>
            <hr>

            <p>👀 Please review the report and logs for failed scenarios, if any.<br>
            🔄 Rerun the workflow after applying fixes if required.</p>

            <p>Regards,<br>
            <strong>GitHub CI Bot</strong><br>
            <em>Techolution QA Automation</em></p>
          attachments: ./html-report/report-screenshot.png
